name: Buddy Prerelease

on:
  push:
    branches:
      - pre
    paths:
      - 'packages/buddy/**'
      - '.github/workflows/prerelease.yaml'

permissions:
  contents: write

jobs:
  build-and-prerelease:
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Node.js, pnpm, and yq
        uses: actions/setup-node@v3
        with:
          node-version: 23
      - uses: pnpm/action-setup@v2
        with:
          version: 9
      - run: brew install yq

      - name: Install Dependencies
        run: pnpm install

      - name: Calculate and Update Prerelease Version
        id: version
        run: |
          cd packages/buddy
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          BASE_VERSION=$(echo $CURRENT_VERSION | cut -d'-' -f1)
          PRERELEASE_SUFFIX=$(echo $CURRENT_VERSION | grep -o '\-.*' || echo "")
          MAJOR=$(echo $BASE_VERSION | cut -d. -f1)
          MINOR=$(echo $BASE_VERSION | cut -d. -f2)
          PATCH=$(echo $BASE_VERSION | cut -d. -f3)

          if [[ "$PRERELEASE_SUFFIX" == *"beta"* ]]; then
            BETA_VERSION=$(echo $PRERELEASE_SUFFIX | grep -o '[0-9]*$')
            NEW_BETA=$((BETA_VERSION + 1))
            NEW_VERSION="$MAJOR.$MINOR.$PATCH-beta.$NEW_BETA"
          else
            NEW_VERSION="$MAJOR.$MINOR.$PATCH-beta.0"
          fi

          echo "New version: $NEW_VERSION"
          perl -pi -e "s/\"version\": \"$CURRENT_VERSION\"/\"version\": \"$NEW_VERSION\"/" package.json

          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Import Code Signing Certificates
        uses: apple-actions/import-codesign-certs@v5
        with:
          p12-file-base64: ${{ secrets.MACOS_CERTIFICATES_P12 }}
          p12-password: ${{ secrets.MACOS_CERTIFICATES_P12_PASSWORD }}

      - name: Prepare Notarization Environment
        id: prepare_env
        run: |
          mkdir -p .private_keys
          KEY_PATH="$GITHUB_WORKSPACE/.private_keys/AuthKey.p8"
          echo "${{ secrets.APP_STORE_CONNECT_KEY_BASE64 }}" | base64 --decode > $KEY_PATH
          echo "key_path=$KEY_PATH" >> $GITHUB_OUTPUT

      - name: Build, Sign, and Notarize macOS App
        run: |
          yq -i 'del(.mac.identity)' packages/buddy/electron-builder.yml
          yq -i '.mac.notarize = true' packages/buddy/electron-builder.yml
          pnpm build:buddy:mac
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: true
          APPLE_API_KEY: ${{ steps.prepare_env.outputs.key_path }}
          APPLE_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APPLE_API_ISSUER: ${{ secrets.APP_STORE_CONNECT_KEY_ISSER_ID }}

      - name: Commit and Push Version Bump to Pre
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add packages/buddy/package.json
          git commit -m "ðŸ”– CI: Prerelease version ${{ steps.version.outputs.version }}"
          git tag -a "v${{ steps.version.outputs.version }}" -m "Prerelease v${{ steps.version.outputs.version }}"
          git push --follow-tags

      - name: Create GitHub Prerelease
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          draft: false
          prerelease: true
          files: |
            packages/buddy/dist/*.dmg
            packages/buddy/dist/*.zip
            packages/buddy/dist/*.yml
            packages/buddy/dist/*.blockmap

      - name: Sync back to dev branch
        run: |
          git checkout dev
          git pull origin dev
          git merge --no-ff pre
          git push origin dev
